{% import . "github.com/vincenscotti/impero/model" %}
{% import "fmt" %}

{% func HeaderPage(title string) %}

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Impero - {%s= title %}</title>
  <!-- Tell the browser to be responsive to screen width -->
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
  <link rel="stylesheet" href="/static/css/bootstrap.min.css">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="/static/css/font-awesome.min.css">
  <!-- Ionicons -->
  <link rel="stylesheet" href="/static/css/ionicons.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="/static/css/AdminLTE.min.css">
  <link rel="stylesheet" href="/static/css/skin-green-light.min.css">

  <!-- Map style -->
  <link rel="stylesheet" href="/static/css/common.css">

  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->

  <!-- Google Font -->
  <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>

<body class="hold-transition skin-green-light fixed sidebar-mini">
<div class="wrapper">

{% endfunc %}

{% code

func quickURL(h *HeaderData, name string, args ...string) string {
	if target, err := h.Router.Get(name).URL(args...); err != nil {
		panic(err)
	} else {
		return target.Path
	}
}

func markupMoney(amount int) string {
  return fmt.Sprintf("%d.%02d $", amount / 100, amount % 100)
}

func markupMoneyCompact(amount int) string {
	if amount % 100 != 0 {
		return fmt.Sprintf("%d.%02d $", amount / 100, amount % 100)
	} else {
		return fmt.Sprintf("%d $", amount / 100)
	}
}

func markupMoneyNoCurrency(amount int) string {
	if amount % 100 != 0 {
		return fmt.Sprintf("%d.%02d", amount / 100, amount % 100)
	} else {
		return fmt.Sprintf("%d", amount / 100)
	}
}

%}
